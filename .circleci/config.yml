version: 2.1

# add your orb below, to be used in integration tests (note: a @dev:alpha
# release must exist.);
orbs:
  codecov: codecov/codecov@dev:alpha
  node: circleci/node@4.4.0
  orb-tools: circleci/orb-tools@10.0
  python: circleci/python@1.4.0
  win: circleci/windows@2.2.0

# Pipeline parameters
parameters:
  # These pipeline parameters are required by the "trigger-integration-tests-workflow"
  # job, by default.
  run-integration-tests:
    type: boolean
    default: false
  dev-orb-version:
    type: string
    default: "dev:alpha"

executors:
  linux:
    docker:
      - image: cimg/base:stable
  macos:
    macos:
      xcode: 11.4
  windows: win/default

  python:
    docker:
      - image: cimg/python:3.9.5
  node:
    docker:
      - image: cimg/node:16.2.0

jobs:
  # This job is an example of an integration testing job.
  # This job should execute a command from your orb and verify
  # the output is as expected, otherwise the job should fail.
  #
  # Rename this job and add more as needed.
  #
  test-backend:
    executor: python
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run: |
          coverage run -m unittest discover
          coverage xml
      - persist_to_workspace:
          root: .
          paths:
            - coverage.xml
  test-frontend:
    executor: node
    steps:
      - checkout
      - node/install-npm
      - run: npm install
      - run: npm test
      - persist_to_workspace:
          root: .
          paths:
            - coverage/coverage-final.json
  test-codecov-orb-non-windows:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    steps:
      - checkout
      - attach_workspace:
          at: .
      - codecov/upload:
          flags: backend
      - codecov/upload:
          file: coverage/coverage-final.json
          flags: frontend
          xtra_args: -v -Z
  test-codecov-orb-windows:
    executor:
      name: win/default
      shell: bash.exe
    steps:
      - checkout
      - attach_workspace:
          at: .
      - codecov/upload:
          flags: backend
      - codecov/upload:
          file: coverage/coverage-final.json
          flags: frontend
          xtra_args: -v -Z

workflows:
  test-pack:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint
      - orb-tools/pack
      - hold:
          type: approval # presents manual approval button in the UI
          requires:
            - orb-tools/lint
            - orb-tools/pack

      # release dev version of orb, for testing & possible publishing.
      # orb will be published as dev:alpha and dev:${CIRCLE_SHA1:0:7}.
      - orb-tools/publish-dev:
          context: Codecov Orb Context
          orb-name: codecov/codecov
          publish-token-variable: ORB_PUBLISH_TOKEN
          requires:
            - hold

      # trigger an integration workflow to test the
      # dev:${CIRCLE_SHA1:0:7} version of your orb
      - orb-tools/trigger-integration-tests-workflow:
          context: Codecov Orb Context
          name: trigger-integration-dev
          requires:
            - orb-tools/publish-dev

  integration-tests_deploy:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - test-backend
      - test-frontend
      - test-codecov-orb-non-windows:
          matrix:
            parameters:
              os: [linux, macos]
          requires:
            - test-backend
            - test-frontend

      - test-codecov-orb-windows:
          requires:
            - test-backend
            - test-frontend

      - orb-tools/dev-promote-prod-from-commit-subject:
          add-pr-comment: false
          context: Codecov Orb Context
          fail-if-semver-not-indicated: false
          filters:
            branches:
              only: master
          orb-name: codecov/codecov
          publish-version-tag: false
          publish-token-variable: ORB_PUBLISH_TOKEN
          requires:
            - test-codecov-orb-non-windows
            - test-codecov-orb-windows
