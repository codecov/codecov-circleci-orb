version: 2.1
orbs:
  codecov: codecov/codecov@dev:alpha
  node: circleci/node@5
  orb-tools: circleci/orb-tools@11
  python: circleci/python@2
  win: circleci/windows@4

filters: &filters
  tags:
    only: /.*/

executors:
  python:
    docker:
      - image: cimg/python:3.10
  node:
    docker:
      - image: cimg/node:current

jobs:
  test-backend:
    executor: python
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run: |
          coverage run -m unittest discover
      - persist_to_workspace:
          root: .
          paths:
            - .coverage
  test-frontend:
    executor: node
    steps:
      - checkout
      - node/install-packages
      - run:
          command: npm test
      - persist_to_workspace:
          root: .
          paths:
            - coverage/coverage-final.json
  test-alpine:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: |
          apk add coreutils curl git gnupg
          mkdir ~/.gnupg
          touch ~/.gnupg/trustedkeys.gpg
      - codecov/upload:
          flags: backend
      - codecov/upload:
          cli_args: -v
          file: coverage/coverage-final.json
          flags: frontend
          upload_args: -Z
      - codecov/upload:
          file: coverage/coverage-final.json
          flags: alpine
          version: v0.2.2
      - codecov/upload:
          flags: string_flag,ENV_VAR_CONTAINING_FLAG
    environment:
      ENV_VAR_CONTAINING_FLAG: env_var_flag
  test-linux:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - attach_workspace:
          at: .
      - codecov/upload:
          flags: backend
      - codecov/upload:
          cli_args: -v
          file: coverage/coverage-final.json
          flags: frontend
          upload_args: -Z
      - codecov/upload:
          file: coverage/coverage-final.json
          flags: linux
          version: v0.2.2
      - codecov/upload:
          flags: string_flag,ENV_VAR_CONTAINING_FLAG
    environment:
      ENV_VAR_CONTAINING_FLAG: env_var_flag
  test-macos:
    macos:
      xcode: 14.1
    steps:
      - checkout
      - attach_workspace:
          at: .
      - codecov/upload:
          flags: backend
      - codecov/upload:
          cli_args: -v
          file: coverage/coverage-final.json
          flags: frontend
          upload_args: -Z
      - codecov/upload:
          file: coverage/coverage-final.json
          flags: macos
          version: v0.2.2
      - codecov/upload:
          flags: string_flag,ENV_VAR_CONTAINING_FLAG
    environment:
      ENV_VAR_CONTAINING_FLAG: env_var_flag
  test-windows:
    executor:
      name: win/default
      shell: bash.exe
    steps:
      - checkout
      - attach_workspace:
          at: .
      - codecov/upload:
          flags: backend
      - codecov/upload:
          cli_args: -v
          file: coverage/coverage-final.json
          flags: frontend
          upload_args: -Z
      - codecov/upload:
          file: coverage/coverage-final.json
          flags: windows
          version: v0.2.2
      - codecov/upload:
          flags: string_flag,ENV_VAR_CONTAINING_FLAG
    environment:
      ENV_VAR_CONTAINING_FLAG: env_var_flag

workflows:
  integration-tests_deploy:
    jobs:
      - test-backend:
          filters: *filters
      - test-frontend:
          filters: *filters
#      - test-alpine:
#          filters: *filters
#          requires: [test-backend, test-frontend]
      - test-linux:
          filters: *filters
          requires: [test-backend, test-frontend]

      - test-macos:
          filters: *filters
          requires: [test-backend, test-frontend]

      - test-windows:
          filters: *filters
          requires: [test-backend, test-frontend]

      - orb-tools/pack:
          filters: *filters
          requires: [test-linux, test-macos, test-windows]

      - orb-tools/publish:
          enable-pr-comment: false
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
          orb-name: codecov/codecov
          pub-type: production
          requires:
            - orb-tools/pack
          vcs-type: github
