version: 2.1

description: >
  Upload your coverage reports to Codecov without dealing with complex configurations. This orb helps you get coverage results quickly so that you can breathe easier and commit your code with confidence.

display:
  source_url: https://github.com/codecov/codecov-circleci-orb
  home_url: https://codecov.io/

commands:
  upload:
    parameters:
      file:
        description: Path to the code coverage data file to upload.
        type: string
        default: ""
      flags:
        description: Flag the upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
        type: string
        default: ""
      token:
        description: Set the private repository token as the value of the variable CODECOV_TOKEN using CircleCI Environment Variables.
        type: string
        default: ${CODECOV_TOKEN}
      upload_name:
        description: Custom defined name of the upload. Visible in Codecov UI
        type: string
        default: ${CIRCLE_BUILD_NUM}
      url:
        description: Custom url to submit the codecov result. Default to "https://codecov.io/bash"
        type: string
        default: "https://codecov.io/bash"
      when:
        description: When should this step run?
        type: string
        default: "always"
      xtra_flags:
        description: Additional flags and values that should be passed to the bash script defined in parameters.url
        type: string
        default: ""
    steps:
      - when:
          condition: << parameters.file >>
          steps:
            - run:
                name: Upload Coverage Results
                command: |
                  curl -s << parameters.url >> | bash -s -- \
                    -f "<< parameters.file >>" \
                    -t "<< parameters.token >>" \
                    -n "<< parameters.upload_name >>" \
                    -F "<< parameters.flags >>" \
                    << parameters.xtra_flags >> \
                    -Z || echo 'Codecov upload failed'
                when: << parameters.when >>
      - unless:
          condition: << parameters.file >>
          steps:
            - run:
                name: Upload Coverage Results
                command: |
                  curl -s << parameters.url >> | bash -s -- \
                    -t "<< parameters.token >>" \
                    -n "<< parameters.upload_name >>" \
                    -F "<< parameters.flags >>" \
                    << parameters.xtra_flags >> \
                    -Z || echo 'Codecov upload failed'
                when: << parameters.when >>
